{"version":3,"sources":["components/body.js","App.js","reportWebVitals.js","index.js"],"names":["Body","curr_value","useState","JSON","parse","window","localStorage","getItem","list","setList","compList","setCompList","handleDel","e","obj","id","comp","Number","target","todo","map","complete","index","push","length","setItem","stringify","splice","location","reload","useEffect","Container","fluid","className","Row","Col","onChange","value","required","type","placeholder","onClick","document","getElementById","aria-hidden","item","Alert","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e13b6194.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\nimport '../styles/styles.css';\nexport const Body = () => {\n  let [list, setList] = useState(\n    JSON.parse(window.localStorage.getItem('list')) || []\n  );\n  let [compList, setCompList] = useState(\n    JSON.parse(window.localStorage.getItem('comp_list')) || []\n  );\n  let curr_value;\n  const handleInput = (e) => {\n    curr_value = e.target.value;\n  };\n\n  const handleAdd = (e) => {\n    let inp = document.getElementById('list').value;\n    if (inp.length > 0) {\n      const obj = { id: '', todo: curr_value };\n      list = list.map((todo, index) => {\n        return { ...todo, id: index };\n      });\n      list.push({ ...obj, id: list.length });\n      window.localStorage.setItem('list', JSON.stringify(list));\n      window.location.reload();\n    }\n  };\n\n  const handleDel = (e) => {\n    let obj = { id: '', comp: list[Number(e.target.id)].todo };\n    compList = compList.map((complete, index) => {\n      return { ...complete, id: index };\n    });\n    compList.push({ ...obj, id: compList.length });\n    window.localStorage.setItem('comp_list', JSON.stringify(compList));\n    list.splice(Number(e.target.id), 1);\n    window.localStorage.setItem('list', JSON.stringify(list));\n    window.location.reload();\n  };\n\n  const handleClear = (e) => {\n    setList([]);\n    setCompList([]);\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    setList(list);\n    window.localStorage.setItem('list', JSON.stringify(list));\n    setCompList(compList);\n    window.localStorage.setItem('comp_list', JSON.stringify(compList));\n  }, [list, compList]);\n\n  return (\n    <Container fluid className='back'>\n      <Row className='box'>\n        <Col>\n          <h2 className='head'>\n            To Do List <i className='fas fa-pencil-alt'></i>\n          </h2>\n          <Col className='inp'>\n            <input\n              onChange={handleInput}\n              required\n              type='text'\n              id='list'\n              placeholder='Add to your list'\n            />\n            <i\n              className='fa fa-plus add'\n              onClick={handleAdd}\n              aria-hidden='true'></i>{' '}\n            <i\n              className='fa fa-trash clear'\n              onClick={handleClear}\n              aria-hidden='true'></i>\n          </Col>\n          <Col>\n            {list.map((item, index) => (\n              <Alert key={index} variant='danger' className='li-item'>\n                <i\n                  key={index}\n                  id={index}\n                  className='fa fa-times del'\n                  onClick={handleDel}\n                  aria-hidden='true'></i>\n                {item.todo}\n              </Alert>\n            ))}\n          </Col>\n          <Col>\n            <h3 className='comp'>Completed Tasks</h3>\n          </Col>\n          <Col>\n            {compList.map((item, index) => (\n              <Alert key={index} variant='success' className='li-item'>\n                <p className='complete'>{item.comp}</p>\n              </Alert>\n            ))}\n          </Col>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import { Body } from './components/body';\nfunction App() {\n  return (\n    <>\n      <Body />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}